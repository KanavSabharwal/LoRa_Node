from network import WLAN,LoRa
import time
import socket
import machine
import pycom
import os

# Switch off heartbeat LED
pycom.heartbeat(False)

# Connect to WiFi
wlan = WLAN(mode=WLAN.STA)
wlan.connect("NUS_STU", auth=(WLAN.WPA2_ENT, 'nusstu\e0575775', '@Jaiguruji7July@'), identity='nusstu\e0575775')
while not wlan.isconnected():
    machine.idle()

# Indicate Wifi Connection with red LED
pycom.rgbled(0xFF0000)

time.sleep(1)
rtc = machine.RTC()
rtc.ntp_sync("0.ubuntu.pool.ntp.org",update_period = 3600)

while not rtc.synced():
    machine.idle()
#Indicate Time sync with blue light
pycom.rgbled(0x0000FF)
time.sleep(1)
starting = True

lora = LoRa(mode=LoRa.LORA, region=LoRa.EU868,power_mode = LoRa.TX_ONLY)

if lora.power_mode()==LoRa.TX_ONLY:
    pycom.rgbled(0xFFFF00)
    time.sleep(1)

s = socket.socket(socket.AF_LORA, socket.SOCK_RAW)

# Set the frequencies and spreading factors for the messages
freq = 868000000
sf = 7

messages = [[0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],
            [0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01],
            [0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0a,0x0b,0x0c,0x0d,0x0e,0x0f],
            [0x00,0x0f,0x02,0x0d,0x04,0x0b,0x06,0x09,0x08,0x07,0x0a,0x05,0x0c,0x03,0x0e,0x01],
            [0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],
            [0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01],
            [0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa],
            [0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff],
            [0xff,0xfe,0xfc,0xf8,0xf0,0xe1,0xc2,0x85,0x0b,0x17,0x2f,0x5e,0xbc,0x78,0xf1,0xe3],
            [0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff]]

lora.frequency(freq)
lora.sf(sf)
lora.tx_power(14)

node_offset = 0 # 0/2/4

while True:
    current_time = rtc.now()
    message = messages[current_time[5]//6]
    if current_time[5]%6==node_offset:
        # Send message and flash LED
        # print(lora.stats())
        big_buffer = bytes(message)
        s.send(big_buffer)
        pycom.rgbled(0x00FF00)  
        time.sleep(2)
        pycom.rgbled(0x000000)
        time.sleep(2)